int *arr;
arr=(int*)malloc(5*sizeof(int));
arr=(int[]){3,1,4,5,2};

int *arr = (int[]){0, 1, 2, 3};
printf("Hehe %d", arr[2]);
printf("Hehe %d", *(arr+2));

const char *arr = "hehe boy";

int array[5];
int array[5] = { 5, 7, 9 };
int array[5] = { };  // Инициализируем все элементы массива значением 0
int array[5] { 4, 5, 8, 9, 12 }; // uniform-инициализация
array[0] = 3;
array[1] = 2;
array[2] = 4;

const int length = sizeof(array) / sizeof(array[0]);
for(int i = 0; i <= length; ++i)
{
    std::printf("%d", i);
}

char text[] = "Print this!";
char dest[50];
strcpy_s(dest, text);

int array[3][5] = {
	{ 1, 2, 3, 4, 5 },
	{ 6, 7, 8, 9, 10 },
	{ 11, 12, 13, 14, 15 }
};
int array[3][5] = { 0 };

std::string
std::array
std::swap(array[0], array[1]);
std::sort(array, array+length);
strcat() — добавляет одну строку к другой (опасно);
strncat() — добавляет одну строку к другой (с проверкой размера места назначения);
strcmp() — сравнивает две строки (возвращает 0, если они равны);
strncmp() — сравнивает две строки до определенного количества символов (возвращает 0, если до указанного символа не было различий).
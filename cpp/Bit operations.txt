3 = 0011
3 << 1 = 0110 = 6
3 << 2 = 1100 = 12
3 << 3 = 1000 = 8

12 = 1100
12 >> 1 = 0110 = 6
12 >> 2 = 0011 = 3
12 >> 3 = 0001 = 1

Присваивание с побитовым сдвигом влево			<<=	x <<= y	   Сдвигаем биты в x влево на y бит
Присваивание с побитовым сдвигом вправо			>>=	x >>= y	   Сдвигаем биты в x вправо на y бит
Присваивание с побитовой операцией ИЛИ			|=	x |= y	   Присваивание результата выражения x | y переменной x
Присваивание с побитовой операцией И			&=	x &= y	   Присваивание результата выражения x & y переменной x
Присваивание с побитовой операцией исключающего ИЛИ	^=	x ^= y	   Присваивание результата выражения x ^ y переменной x

Побитовый сдвиг влево			<<
Побитовый сдвиг вправо			>>
Побитовое НЕ (NOT)			~
Побитовое И (AND)			&
Побитовое исключающее ИЛИ (XOR)		^
Побитовое ИЛИ (OR)			|

const unsigned char option1 = 0x01; // шестнадцатеричный литерал для 0000 0001
const unsigned int lowMask = 0xF; // битовая маска для хранения последних 4 бит (шестнадцатеричный литерал для 0000 0000 0000 1111)

glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);